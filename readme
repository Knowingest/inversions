FYI, the data inside InversionResult.pdf is 100% correct data given to us by our professor.  That can be used to validate this program.

There were originally a Sample7 and a Sample8... but 7 was 30MB and 8 is 306MB... so I'm not going to upload those here. 
Sample6 takes around ~5-6 minutes with my implementation, so you probably wouldn't have the patience to run them anyway.

My biggest problem is that I used push_back() to add things to my vectors without resizing them pre-emptively.
Every time we push_back() we're resizing the entire array, and these arrays are going to be BIG.

If I redid it I would do it all in-place in a single array, and use iterators to tell functions which sub-arrays to work with.
That should get rid of most of the slowness.  But on a theoretical level, the complexity of the algorithm used is O(nlog(n))
